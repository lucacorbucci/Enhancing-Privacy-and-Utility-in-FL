[tool.poetry]
name = "pistacchio_simulator"
version = "0.1.0"
description = "A simulator framework for Federated Learning for research purposes."
authors = ["Luca Corbucci"]
license = "MIT"
readme = "README.md"
packages = [ { include = "pistacchio_simulator" } ]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.24.1"
mypy = "^0.991"
scikit-learn = "^1.2.1"
torchsummary = "^1.5.1"
tqdm = "^4.64.1"
python-dotenv = "^0.21.1"
regex = "^2022.10.31"
wandb = "^0.14.0"
pandas = "^1.5.3"
dill = "^0.3.6"
multiprocess = "^0.70.14"
pydantic = "^1.10.4"
ruff = "^0.1.2"
pydoc-markdown = "^4.6.4"
loguru = "^0.6.0"
opacus = {git = "https://github.com/pytorch/opacus.git"}
torchvision = "^0.16.1"
torch = "^2.1.1"



[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
coverage = "^7.1.0"
ipykernel = "^6.26.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191", # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.ruff.isort]
case-sensitive = true
combine-as-imports = true

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


